
//  Adapted from https://en.wikipedia.org/wiki/Blackjack#Basic_strategy
//      -added two rows: hard[][21] and soft[][10] to evaluate Naturals
//  S = stand, H = hit, L = split, N = Natural, W = surrender (if not allowed, then hit)
//  Dh = double (if not allowed, then hit), Ds = double (if not allowed, then stand)
function BasicStrategy() {
//      Dealer ->  0, 1,  2,  3,   4,   5,   6,   7,   8,   9,  10,  11 (Ace)
    this.hard = [['','', '', '',  '',  '',  '',  '',  '',  '',  '',  ''],   //  0
                 ['','', '', '',  '',  '',  '',  '',  '',  '',  '',  ''],   //  1
                 ['','', '', '',  '',  '',  '',  '',  '',  '',  '',  ''],   //  2
                 ['','', '', '',  '',  '',  '',  '',  '',  '',  '',  ''],   //  3
                 ['','', '', '',  '',  '',  '',  '',  '',  '',  '',  ''],   //  4
                 ['','','H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'],  //  5
                 ['','','H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'],  //  6
                 ['','','H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'],  //  7
                 ['','','H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'],  //  8
                 ['','','H', 'Dh','Dh','Dh','Dh','H', 'H', 'H', 'H', 'H'],  //  9
                 ['','','Dh','Dh','Dh','Dh','Dh','Dh','Dh','Dh','H', 'H'],  // 10
                 ['','','Dh','Dh','Dh','Dh','Dh','Dh','Dh','Dh','Dh','Dh'], // 11
                 ['','','H', 'H', 'S', 'S', 'S', 'H', 'H' ,'H' ,'H' ,'H'],  // 12
                 ['','','S', 'S', 'S', 'S', 'S', 'H', 'H' ,'H' ,'H' ,'H'],  // 13
                 ['','','S', 'S', 'S', 'S', 'S', 'H', 'H' ,'H' ,'H' ,'H'],  // 14
                 ['','','S', 'S', 'S', 'S', 'S', 'H', 'H' ,'H' ,'W' ,'H'],  // 15
                 ['','','S', 'S', 'S', 'S', 'S', 'H', 'H' ,'W' ,'W' ,'W'],  // 16
                 ['','','S', 'S', 'S', 'S', 'S', 'S', 'S' ,'S' ,'S' ,'S'],  // 17
                 ['','','S', 'S', 'S', 'S', 'S', 'S', 'S' ,'S' ,'S' ,'S'],  // 18
                 ['','','S', 'S', 'S', 'S', 'S', 'S', 'S' ,'S' ,'S' ,'S'],  // 19
                 ['','','S', 'S', 'S', 'S', 'S', 'S', 'S' ,'S' ,'S' ,'S']];  // 20

//      Dealer ->  0, 1,  2,  3,   4,   5,   6,   7,   8,   9,  10,  11 (Ace)
    this.soft = [['','', '', '',  '',  '',  '',  '',  '',  '',  '',  ''],   //  0
                 ['','', '', '',  '',  '',  '',  '',  '',  '',  '',  ''],   //  1
                 ['','','H', 'H', 'H', 'Dh','Dh','H', 'H', 'H', 'H', 'H'],  //  2
                 ['','','H', 'H', 'H', 'Dh','Dh','H', 'H', 'H', 'H', 'H'],  //  3
                 ['','','H', 'H', 'Dh','Dh','Dh','H', 'H', 'H', 'H', 'H'],  //  4
                 ['','','H', 'H', 'Dh','Dh','Dh','H', 'H', 'H', 'H', 'H'],  //  5
                 ['','','H', 'Dh','Dh','Dh','Dh','H', 'H', 'H', 'H', 'H'],  //  6
                 ['','','Ds','Ds','Ds','Ds','Ds','S', 'S', 'H', 'H', 'H'],  //  7
                 ['','','S', 'S', 'S', 'S', 'Ds','S', 'S', 'S', 'S', 'S'],  //  8
                 ['','','S', 'S', 'S', 'S', 'S' ,'S', 'S', 'S', 'S', 'S']];  //  9

//      Dealer ->  0, 1,  2,  3,   4,   5,   6,   7,   8,   9,  10,  11 (Ace)
    this.pair = [['','', '', '',  '',  '',  '',  '',  '',  '',  '',  ''],   //  0
                 ['','', '', '',  '',  '',  '',  '',  '',  '',  '',  ''],   //  1
                 ['','','L', 'L', 'L', 'L', 'L' ,'L', 'H', 'H', 'H', 'H'],  //  2
                 ['','','L', 'L', 'L', 'L', 'L' ,'L', 'H', 'H', 'H', 'H'],  //  3
                 ['','','H', 'H', 'H', 'L', 'L', 'H', 'H', 'H', 'H', 'H'],  //  4
                 ['','','Dh','Dh','Dh','Dh','Dh','Dh','Dh','Dh','H', 'H'],  //  5
                 ['','','L', 'L', 'L', 'L', 'L' ,'H', 'H', 'H', 'H', 'H'],  //  6
                 ['','','L', 'L', 'L', 'L', 'L' ,'L', 'H', 'H', 'H', 'H'],  //  7
                 ['','','L', 'L', 'L', 'L', 'L' ,'L', 'L', 'L', 'L', 'L'],  //  8
                 ['','','L', 'L', 'L', 'L', 'L', 'S', 'L', 'L', 'S', 'S'],  //  9
                 ['','','S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S'],  // 10
                 ['','','L', 'L', 'L', 'L', 'L' ,'L', 'L', 'L', 'L', 'L']]; // 11 (Ace)
}

module.exports = BasicStrategy;